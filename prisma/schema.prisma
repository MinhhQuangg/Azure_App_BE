generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model chat_rooms {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  admin_id    String     @db.Uuid
  created_at  DateTime?  @default(now()) @db.Timestamp(6)
  updated_at  DateTime?  @db.Timestamp(6)
  url         String
  description String?
  name        String?    @db.VarChar(255)
  users       users      @relation(fields: [admin_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  joins       joins[]
  messages    messages[]
}

model joins {
  user_id    String     @db.Uuid
  chat_id    String     @db.Uuid
  chat_rooms chat_rooms @relation(fields: [chat_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users      users      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([user_id, chat_id])
}

model messages {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  content     String
  created_by  String     @db.Uuid
  chatroom_id String     @db.Uuid
  created_at  DateTime?  @default(now()) @db.Timestamp(6)
  chat_rooms  chat_rooms @relation(fields: [chatroom_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users       users      @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email           String       @unique @db.VarChar(255)
  given_name      String       @db.VarChar(100)
  last_name       String       @db.VarChar(100)
  profile_picture String?
  created_at      DateTime?    @default(now()) @db.Timestamp(6)
  preferred_lang  String?      @db.VarChar(50)
  chat_rooms      chat_rooms[]
  joins           joins[]
  messages        messages[]
}
